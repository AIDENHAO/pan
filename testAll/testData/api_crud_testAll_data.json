{
  "characterAPI": {
    "testCharacter": {
      "name": "API测试角色",
      "gender": "男",
      "realm_level": 1,
      "cultivation_value": 0,
      "spiritual_root": "金",
      "life_state": "存活",
      "location": "API测试地点",
      "description": "API层测试创建的角色"
    },
    "updateData": {
      "cultivation_value": 100,
      "description": "API层测试更新的角色"
    },
    "affinityData": {
      "metal_affinity": 80,
      "wood_affinity": 60,
      "water_affinity": 70,
      "fire_affinity": 50,
      "earth_affinity": 65
    },
    "endpoints": {
      "create": "/api/v2/character",
      "getById": "/api/v2/character/{id}",
      "update": "/api/v2/character/{id}",
      "delete": "/api/v2/character/{id}",
      "list": "/api/v2/character",
      "affinities": "/api/v2/character/{id}/affinities"
    }
  },
  "staticDataAPI": {
    "endpoints": {
      "realms": "/api/v2/static-data/realms",
      "skills": "/api/v2/static-data/skills",
      "items": "/api/v2/static-data/items"
    },
    "queryParams": {
      "pagination": {
        "page": 1,
        "limit": 5
      },
      "filters": {
        "type": "weapon",
        "level": 1
      }
    },
    "expectedResponse": {
      "statusCode": 200,
      "contentType": "application/json",
      "hasSuccessField": true,
      "hasDataField": true,
      "dataIsArray": true
    }
  },
  "systemAPI": {
    "endpoints": {
      "health": "/api/v2/system/health",
      "info": "/api/v2/system/info",
      "databaseStatus": "/api/v2/system/database-status",
      "version": "/api/v2"
    },
    "expectedResponses": {
      "health": {
        "statusCode": 200,
        "requiredFields": ["status"],
        "expectedStatus": "healthy"
      },
      "info": {
        "statusCode": 200,
        "requiredFields": ["version", "environment"]
      },
      "databaseStatus": {
        "statusCode": 200,
        "requiredFields": ["status", "connections"]
      }
    }
  },
  "errorHandlingTests": {
    "notFound": {
      "endpoints": [
        "/api/v2/non-existent-endpoint",
        "/api/v2/character/non-existent-id-12345"
      ],
      "expectedStatusCode": 404
    },
    "badRequest": {
      "invalidData": {
        "gender": "男"
      },
      "expectedStatusCode": 400
    },
    "methodNotAllowed": {
      "endpoint": "/api/v2/system/health",
      "invalidMethods": ["POST", "PUT", "DELETE"],
      "expectedStatusCode": 405
    }
  },
  "validationTests": {
    "invalidParameters": {
      "queryParams": {
        "page": "invalid",
        "limit": "abc"
      },
      "pathParams": {
        "id": "invalid-uuid-format"
      }
    },
    "missingRequiredFields": {
      "character": {
        "gender": "男"
      }
    },
    "invalidFieldTypes": {
      "realm_level": "not_a_number",
      "cultivation_value": "invalid_number"
    }
  },
  "performanceTests": {
    "concurrentRequests": {
      "count": 10,
      "endpoint": "/api/v2/static-data/realms",
      "maxDurationMs": 5000
    },
    "responseTime": {
      "endpoints": [
        "/api/v2/system/health",
        "/api/v2/static-data/realms",
        "/api/v2/character"
      ],
      "maxResponseTimeMs": 1000
    }
  },
  "securityTests": {
    "sqlInjection": {
      "payloads": [
        "'; DROP TABLE characters; --",
        "' OR '1'='1'",
        "1; DELETE FROM characters WHERE 1=1; --"
      ]
    },
    "xss": {
      "payloads": [
        "<script>alert('XSS')</script>",
        "javascript:alert('XSS')",
        "<img src=x onerror=alert('XSS')>"
      ]
    },
    "invalidHeaders": {
      "oversizeHeader": "x".repeat(10000),
      "malformedContentType": "application/invalid"
    }
  },
  "apiVersionTests": {
    "supportedVersions": ["v2"],
    "deprecatedVersions": ["v1"],
    "versionEndpoint": "/api/v2",
    "expectedVersionInfo": {
      "version": "2.0",
      "modules": ["character", "static-data", "system"]
    }
  }
}